name: Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: read
  repository-projects: read

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          
      - name: Create release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release/${{ steps.version.outputs.tag }}
          
      - name: Update version in build.gradle.kts
        run: |
          sed -i "s/version = \".*\"/version = \"${{ steps.version.outputs.version }}\"/" build.gradle.kts
          
      - name: Run tests
        run: ./gradlew test
        
      - name: Commit version change
        run: |
          git add build.gradle.kts
          git commit -m "Release version ${{ steps.version.outputs.version }}"
          git push origin release/${{ steps.version.outputs.tag }}
          
      - name: Create Pull Request
        uses: actions/github-script@v7
        id: create_pr
        with:
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release version ${{ steps.version.outputs.version }}`,
              body: `Automated release PR for version ${{ steps.version.outputs.version }}`,
              head: `release/${{ steps.version.outputs.tag }}`,
              base: 'main'
            });
            
            console.log(`Created PR #${pr.number}: ${pr.html_url}`);
            core.setOutput('pr_number', pr.number);
            return pr.number;
          
      - name: PR Created - Manual Review Required
        run: |
          PR_NUMBER=${{ steps.create_pr.outputs.pr_number }}
          echo "‚úÖ Release PR #$PR_NUMBER has been created successfully!"
          echo ""
          echo "üìã Next steps:"
          echo "1. Review the PR: https://github.com/${{ github.repository }}/pull/$PR_NUMBER"
          echo "2. Verify the version change in build.gradle.kts"
          echo "3. Check that all CI checks pass"
          echo "4. Manually merge the PR when ready"
          echo "5. GitHub release and Maven Central publishing will happen automatically after merge"
          echo ""
          echo "‚ö†Ô∏è  Important: Do not delete the release branch until after publishing is complete"
