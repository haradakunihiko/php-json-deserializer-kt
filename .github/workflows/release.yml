name: Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          
      - name: Create release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release/${{ steps.version.outputs.tag }}
          
      - name: Update version in build.gradle.kts
        run: |
          sed -i.bak "s/version = \".*\"/version = \"${{ steps.version.outputs.version }}\"/" build.gradle.kts
          rm build.gradle.kts.bak
          
      - name: Run tests
        run: ./gradlew test
        
      - name: Commit version change
        run: |
          git add build.gradle.kts
          git commit -m "Release version ${{ steps.version.outputs.version }}"
          git push origin release/${{ steps.version.outputs.tag }}
          
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Release version ${{ steps.version.outputs.version }}" \
            --body "Automated release PR for version ${{ steps.version.outputs.version }}" \
            --base main \
            --head release/${{ steps.version.outputs.tag }}
          
      - name: Enable auto-merge and merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(gh pr list --head release/${{ steps.version.outputs.tag }} --json number --jq '.[0].number')
          gh pr merge $PR_NUMBER --auto --squash
          
      - name: Wait for PR merge
        run: sleep 60
        
      - name: Update local main branch
        run: |
          git checkout main
          git pull origin main
          
      - name: Create GitHub Release with auto-generated notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.tag }} \
            --title "Release ${{ steps.version.outputs.tag }}" \
            --generate-notes \
            --latest
            
      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
